openapi: 3.0.1
info:
  title: Book Service
  version: v0
servers:
  - url: http://localhost:8080/v1
    description: Generated server url
paths:
  /publisher/updatePublisher/{id}:
    put:
      tags:
        - publisher-controller
      operationId: updatePublisher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublisherDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /book/updateBook/{id}:
    put:
      tags:
        - book-controller
      operationId: updateBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /author/updateAuthor/{id}:
    put:
      tags:
        - author-controller
      operationId: updateAuthor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /publisher/savePublisher:
    post:
      tags:
        - publisher-controller
      operationId: savePublisher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublisherDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /book/setPublisher:
    post:
      tags:
        - book-controller
      operationId: setPublisher
      parameters:
        - name: pid
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: bid
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /book/setAuthor:
    post:
      tags:
        - book-controller
      operationId: setAuthor
      parameters:
        - name: aid
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: bid
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /book/saveBook:
    post:
      tags:
        - book-controller
      operationId: saveBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /author/saveAuthor:
    post:
      tags:
        - author-controller
      operationId: saveAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /publisher/patchPublisher/{id}:
    patch:
      tags:
        - publisher-controller
      operationId: patchPublisher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublisherDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /book/patchBook/{id}:
    patch:
      tags:
        - book-controller
      operationId: patchBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /author/patchAuthor/{id}:
    patch:
      tags:
        - author-controller
      operationId: patchAuthor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /publisher/search/publisherByName:
    get:
      tags:
        - publisher-controller
      operationId: getPublisherByName
      parameters:
        - name: publisherName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /publisher/search/publisherById/{id}:
    get:
      tags:
        - publisher-controller
      operationId: getPublisherById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /publisher/allPublisher:
    get:
      tags:
        - publisher-controller
      operationId: getAllPublisher
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /book/search/bookByTitle:
    get:
      tags:
        - book-controller
      operationId: getBookByTitle
      parameters:
        - name: title
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /book/search/bookById/{id}:
    get:
      tags:
        - book-controller
      operationId: getBookById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /book/getAllBooks:
    get:
      tags:
        - book-controller
      operationId: getBooks
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /author/search/authorById/{id}:
    get:
      tags:
        - author-controller
      operationId: getAuthorById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /author/getAllAuthors:
    get:
      tags:
        - author-controller
      operationId: getAuthors
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /publisher/deletePublisher/{id}:
    delete:
      tags:
        - publisher-controller
      operationId: deletePublisher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /book/deleteBook/{id}:
    delete:
      tags:
        - book-controller
      operationId: deleteBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /author/deleteAuthor/{id}:
    delete:
      tags:
        - author-controller
      operationId: deleteAuthor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    PublisherDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        publisherName:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
    AuthorDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstname:
          type: string
        lastname:
          type: string
    BookDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        isbn:
          type: string
        authors:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AuthorDTO'
        publisher:
          $ref: '#/components/schemas/PublisherDTO'
